{"$schema":"http://json-schema.org/draft-07/schema#","title":"Config","type":"object","properties":{"balance_comments":{"description":"if true, comments { ... } can contain balanced brackets, like {{}}. if not, a comment {{}} ends at the first closing bracket.","default":false,"type":"boolean"},"stdout_buffer_size":{"description":"stdout buffer size in bytes","default":8192,"allOf":[{"$ref":"#/definitions/StdoutBufferSize"}]},"string_escape_sequences":{"description":"if true, string literals that contain escape sequences are unescaped. if false, escape sequences are kept as is.","default":false,"type":"boolean"},"tab_width":{"default":2,"allOf":[{"$ref":"#/definitions/TabWidth"}]},"type_safety":{"default":"None","allOf":[{"$ref":"#/definitions/TypeSafety"}]},"write_command_comments":{"description":"if true, the assembly file will contain the original source code as comments.","default":false,"type":"boolean"}},"definitions":{"StdoutBufferSize":{"type":"integer","format":"uint64","minimum":0.0},"TabWidth":{"type":"integer","format":"uint","minimum":0.0},"TypeSafety":{"oneOf":[{"description":"No type safety checks are performed.","type":"string","enum":["None"]},{"description":"When trying to execute a lambda, make sure that the popped value is a lambda.","type":"string","enum":["Lambda"]},{"description":"Include all checks from [TypeSafety::Lambda], and make sure that when storing or loading a variable, the popped value is a variable name.","type":"string","enum":["LambdaAndVar"]},{"description":"Include all checks from [TypeSafety::LambdaAndVar], and ensure that only integers can be used for arithmetic operations.","type":"string","enum":["Full"]}]}}}